{"version":3,"sources":["components/Post/Post.js","components/Post/Posts.js","components/redux/types.js","components/Post/PostsData.js","components/PostForm/PostForm.js","components/redux/actions/actions.js","App.js","components/redux/reducers/postReducer.js","components/redux/reducers/rootReducer.js","reportWebVitals.js","index.js"],"names":["Post","author","date","content","image","comment","share","favorite","className","src","photo","alt","name","nickname","connect","state","postsData","posts","map","post","index","key","CREATE_POST","ANAKIN_IMAGE","mandoImage","defaultPosts","PostForm","props","submitHendler","mounth","Date","getMonth","day","getDate","correctMounth","Intl","DateTimeFormat","month","format","newPost","createPost","resetInput","changeInputHendler","event","setState","prev","target","value","Card","variant","id","NativeSelect","onChange","FormControl","InputLabel","htmlFor","Input","this","e","Button","color","onClick","React","Component","mapDispatchToProps","type","payload","App","initialState","rootReducer","combineReducers","actions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAuCeA,EAhCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,QAASC,EAA1C,EAA0CA,MAAOC,EAAjD,EAAiDA,SAAjD,OACX,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKC,IAAKR,EAAOS,MAAOC,IAAI,WAC5B,mBAAGH,UAAU,OAAb,SAAqBP,EAAOW,OAC5B,oBAAGJ,UAAU,oBAAb,qBAAsCP,EAAOY,UAA7C,aACA,mBAAGL,UAAU,oBAAb,SAAkCN,OAEpC,sBAAKM,UAAU,UAAf,UACE,mBAAGA,UAAU,eAAb,SAA6BL,IAC7B,qBAAKM,IAAKL,EAAOO,IAAG,oBAEtB,sBAAKH,UAAU,SAAf,UACE,uBAAMI,KAAK,UAAX,UACE,cAAC,IAAD,IACCP,KAEH,uBAAMO,KAAK,QAAX,UACE,cAAC,IAAD,IACCN,KAEH,uBAAMM,KAAK,WAAX,UACE,cAAC,IAAD,IACCL,KAEH,sBAAMK,KAAK,UAAX,SACE,cAAC,IAAD,aCVOE,G,MAAAA,aANS,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAME,MAAMA,SAIZH,EAhBD,SAAC,GAAD,IAAGE,EAAH,EAAGA,UAAH,OACZ,qBAAKR,UAAU,QAAf,SACGQ,EACCA,EAAUE,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAC,EAAD,2BAAUD,GAAV,IAAgBE,IAAKD,QAEpD,wD,wCCZOE,EAAc,mBCApB,IAAMC,EACX,6FAKWC,EAAU,sIA8BRC,EA5BM,CACnB,CACExB,OAAQ,CACNW,KAAM,mBACNF,MAAOa,EACPV,SAAU,cAEZV,QAAS,kDACTC,MAbF,gGAcEF,KAAM,cACNG,QAAS,GACTC,MAAO,EACPC,SAAU,IAEZ,CACEN,OAAQ,CACNW,KAAM,cACNF,MAAOc,EACPX,SAAU,SAEZV,QAAS,mCACTC,MAxBU,uEAyBVF,KAAM,YACNG,QAAS,GACTC,MAAO,EACPC,SAAU,K,gDCjBRmB,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,cAAgB,WAAO,IAAD,EACuB,EAAKb,MAAxCF,EADY,EACZA,SAAUV,EADE,EACFA,QAASC,EADP,EACOA,MAAOQ,EADd,EACcA,KAClC,GAAKC,GAAaV,GAAYC,EAA9B,CAIA,IAAMyB,GAAS,IAAIC,MAAOC,WACpBC,GAAM,IAAIF,MAAOG,UAEjBC,EAAgB,IAAIC,KAAKC,eAAe,QAD9B,CAAEC,MAAO,SACuCC,OAC9DT,GAGIU,EAAU,CACdtC,OAAQ,CACNW,OACAF,MAAgB,qBAATE,EAA8BW,EAAeC,EACpDX,YAEFV,UACAC,QACAF,KAAK,GAAD,OAAK8B,EAAL,YAAYE,GAChB7B,QAAS,EACTC,MAAO,EACPC,SAAU,GAGZ,EAAKoB,MAAMa,WAAWD,GACtB,EAAKE,eAvCY,EA0CnBC,mBAAqB,SAACC,GACpB,EAAKC,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,eAENF,EAAMG,OAAOlC,KAAO+B,EAAMG,OAAOC,YA7CxB,EAiDnBN,WAAa,WACX,EAAKG,SAAS,CACZhC,KAAM,GACNF,MAAO,GACPG,SAAU,GACVV,QAAS,GACTC,MAAO,MApDT,EAAKW,MAAQ,CACXH,KAAM,mBACNC,SAAU,GACVV,QAAS,GACTC,MAAO,IAPQ,E,qDA2DT,IAAD,OACP,OACE,eAAC4C,EAAA,EAAD,CAAMC,QAAQ,WAAWC,GAAG,OAA5B,UACE,2CACA,sBAAK1C,UAAU,cAAf,UACE,eAAC2C,EAAA,EAAD,CACEvC,KAAK,OACLqC,QAAQ,WACRC,GAAG,cACHE,SAAU,SAACT,GAAD,OAAW,EAAKD,mBAAmBC,IAJ/C,UAME,wBAAQI,MAAM,mBAAd,8BACA,wBAAQA,MAAM,cAAd,4BAEF,eAACM,EAAA,EAAD,CAAaH,GAAG,gBAAhB,UACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBACA,cAACC,EAAA,EAAD,CACE5C,KAAK,WACLmC,MAAOU,KAAK5C,SACZuC,SAAU,SAACM,GAAD,OAAO,EAAKhB,mBAAmBgB,YAI/C,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,OAApB,iCACA,cAACC,EAAA,EAAD,CACE5C,KAAK,UACLmC,MAAOU,KAAKtD,QACZiD,SAAU,SAACM,GAAD,OAAO,EAAKhB,mBAAmBgB,SAG7C,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,aAApB,yBACA,cAACC,EAAA,EAAD,CACE5C,KAAK,QACLmC,MAAOU,KAAKrD,MACZgD,SAAU,SAACM,GAAD,OAAO,EAAKhB,mBAAmBgB,SAG7C,cAACC,EAAA,EAAD,CACEV,QAAQ,YACRW,MAAM,UACNV,GAAG,WACHW,QAASJ,KAAK7B,cAJhB,yB,GAnGekC,IAAMC,WAgHvBC,EAAqB,CACzBxB,WC/HK,SAAoBrB,GACzB,MAAO,CACL8C,KAAM3C,EACN4C,QAAS/C,KD+HEL,cAAQ,KAAMkD,EAAdlD,CAAkCY,GElHlCyC,EAbH,WACV,OACE,sBAAK3D,UAAU,YAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,U,QCTF4D,EAAe,CACnBnD,MAAOQ,GCDI4C,EAAcC,YAAgB,CACzCrD,MDG0B,WAAoC,IAAnCF,EAAkC,uDAA1BqD,EAAcG,EAAY,uCAC7D,OAAQA,EAAQN,MACd,KAAK3C,EACH,OAAO,2BAAKP,GAAZ,IAAmBE,MAAM,GAAD,mBAAMF,EAAME,OAAZ,CAAmBsD,EAAQL,YACrD,QACE,OAAOnD,MEAEyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAQC,YACZb,EACAc,YACEC,OAAOC,8BAAgCD,OAAOC,iCAIlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.4f429fbb.chunk.js","sourcesContent":["import { React } from 'react';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ModeCommentOutlinedIcon from '@material-ui/icons/ModeCommentOutlined';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nconst Post = ({ author, date, content, image, comment, share, favorite }) => (\r\n  <div className=\"post\">\r\n    <div className=\"author\">\r\n      <img src={author.photo} alt=\"author\" />\r\n      <p className=\"name\">{author.name}</p>\r\n      <p className=\"autor-information\">{`@${author.nickname}`} â€¢</p>\r\n      <p className=\"autor-information\">{date}</p>\r\n    </div>\r\n    <div className=\"content\">\r\n      <p className=\"content-text\">{content}</p>\r\n      <img src={image} alt={`post content`} />\r\n    </div>\r\n    <div className=\"badges\">\r\n      <span name=\"comment\">\r\n        <ModeCommentOutlinedIcon></ModeCommentOutlinedIcon>\r\n        {comment}\r\n      </span>\r\n      <span name=\"share\">\r\n        <ShareIcon></ShareIcon>\r\n        {share}\r\n      </span>\r\n      <span name=\"favorite\">\r\n        <FavoriteBorderIcon></FavoriteBorderIcon>\r\n        {favorite}\r\n      </span>\r\n      <span name=\"forward\">\r\n        <ForwardIcon></ForwardIcon>\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Post from './Post';\r\n\r\nimport './Post.css';\r\n\r\nconst Posts = ({ postsData }) => (\r\n  <div className=\"posts\">\r\n    {postsData ? (\r\n      postsData.map((post, index) => <Post {...post} key={index} />)\r\n    ) : (\r\n      <p>You have no posts</p>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.posts.posts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Posts);\r\n","export const CREATE_POST = 'POST/CREATE_POST';\r\n","export const ANAKIN_IMAGE =\r\n  'https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg';\r\nexport const RAY_IMAGE =\r\n  'https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale';\r\n\r\nconst WayImage = `https://sayingimages.com/wp-content/uploads/the-way-this-is-meme.jpg`;\r\nexport const mandoImage = `https://styles.redditmedia.com/t5_u8wq5/styles/communityIcon_62iioh7khuv51.png?width=256&s=3c4a604c15ed964e5c5d055dc8f8c3b7e89023d9`;\r\n\r\nconst defaultPosts = [\r\n  {\r\n    author: {\r\n      name: 'Anakin Skywalker',\r\n      photo: ANAKIN_IMAGE,\r\n      nickname: 'dart_vader',\r\n    },\r\n    content: 'WTF? Who is Ray? Why she is Skywalker? Luke...?',\r\n    image: RAY_IMAGE,\r\n    date: '26 February',\r\n    comment: 24,\r\n    share: 5,\r\n    favorite: 56,\r\n  },\r\n  {\r\n    author: {\r\n      name: 'Mandalorian',\r\n      photo: mandoImage,\r\n      nickname: 'Mando',\r\n    },\r\n    content: 'I have spoken. This is the way. ',\r\n    image: WayImage,\r\n    date: '1 January',\r\n    comment: 28,\r\n    share: 8,\r\n    favorite: 45,\r\n  },\r\n];\r\nexport default defaultPosts;\r\n","import React from 'react';\r\n\r\nimport { createPost } from '../redux/actions/actions';\r\nimport { ANAKIN_IMAGE } from '../Post/PostsData';\r\nimport { mandoImage } from '../Post/PostsData';\r\n\r\nimport {\r\n  FormControl,\r\n  NativeSelect,\r\n  InputLabel,\r\n  Input,\r\n  Button,\r\n  Card,\r\n} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PostForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: 'Anakin Skywalker',\r\n      nickname: '',\r\n      content: '',\r\n      image: '',\r\n    };\r\n  }\r\n\r\n  submitHendler = () => {\r\n    const { nickname, content, image, name } = this.state;\r\n    if (!nickname || !content || !image) {\r\n      return;\r\n    }\r\n\r\n    const mounth = new Date().getMonth();\r\n    const day = new Date().getDate();\r\n    const options = { month: 'long' };\r\n    const correctMounth = new Intl.DateTimeFormat('en-US', options).format(\r\n      mounth\r\n    );\r\n\r\n    const newPost = {\r\n      author: {\r\n        name,\r\n        photo: name === 'Anakin Skywalker' ? ANAKIN_IMAGE : mandoImage,\r\n        nickname,\r\n      },\r\n      content,\r\n      image,\r\n      date: `${day} ${correctMounth}`,\r\n      comment: 0,\r\n      share: 0,\r\n      favorite: 0,\r\n    };\r\n\r\n    this.props.createPost(newPost);\r\n    this.resetInput();\r\n  };\r\n\r\n  changeInputHendler = (event) => {\r\n    this.setState((prev) => ({\r\n      ...prev,\r\n      ...{ [event.target.name]: event.target.value },\r\n    }));\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      name: '',\r\n      photo: '',\r\n      nickname: '',\r\n      content: '',\r\n      image: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card variant=\"outlined\" id=\"card\">\r\n        <h1> Add Post</h1>\r\n        <div className=\"card-header\">\r\n          <NativeSelect\r\n            name=\"name\"\r\n            variant=\"outlined\"\r\n            id=\"card-select\"\r\n            onChange={(event) => this.changeInputHendler(event)}\r\n          >\r\n            <option value=\"Anakin Skywalker\">Anakin Skywalker</option>\r\n            <option value=\"Mandalorian\">Mandalorian</option>\r\n          </NativeSelect>\r\n          <FormControl id=\"nickname-form\">\r\n            <InputLabel htmlFor=\"nickname\">Nick name</InputLabel>\r\n            <Input\r\n              name=\"nickname\"\r\n              value={this.nickname}\r\n              onChange={(e) => this.changeInputHendler(e)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"Text\">What's on your mind</InputLabel>\r\n          <Input\r\n            name=\"content\"\r\n            value={this.content}\r\n            onChange={(e) => this.changeInputHendler(e)}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"PictureURL\">Picture URL</InputLabel>\r\n          <Input\r\n            name=\"image\"\r\n            value={this.image}\r\n            onChange={(e) => this.changeInputHendler(e)}\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          id=\"card-btn\"\r\n          onClick={this.submitHendler}\r\n        >\r\n          Post\r\n        </Button>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createPost,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(PostForm);\r\n","import { CREATE_POST } from '../types';\r\n\r\nexport function createPost(post) {\r\n  return {\r\n    type: CREATE_POST,\r\n    payload: post,\r\n  };\r\n}\r\n","import React from 'react';\n\nimport Posts from './components/Post/Posts';\nimport PostForm from './components/PostForm/PostForm';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row1\">\n        <Posts />\n      </div>\n      <div className=\"row2\">\n        <PostForm />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import defaultPosts from '../../Post/PostsData';\r\nimport { CREATE_POST } from '../types';\r\n\r\nconst initialState = {\r\n  posts: defaultPosts,\r\n};\r\n\r\nexport const postsReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case CREATE_POST:\r\n      return { ...state, posts: [...state.posts, actions.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { postsReducer } from './postReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  posts: postsReducer,\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { rootReducer } from './components/redux/reducers/rootReducer';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}